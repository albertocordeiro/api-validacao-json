const express = require('express');
const app = express();
const PORT = 3000;

// Middleware para interpretar JSON
app.use(express.json());


// Rota básica
app.get('/', (req, res) => {
  res.send('API funcionando!');
});

app.listen(PORT, () => {
  console.log(`Servidor rodando em http://localhost:${PORT}`);
});

app.post('/validar-json', (req, res) => {
    const data = req.body;

    // Validação simples
    if (data && data.chave) {
        res.status(200).json({ message: 'JSON válido!', recebido: data });
    } else {
        res.status(400).json({ message: 'JSON inválido!' });
    }
});

app.post('/validar-json', (req, res) => {
    const data = req.body;

    // Verificar se os campos obrigatórios existem
    if (!data.nome || typeof data.nome !== 'string') {
        return res.status(400).json({ message: 'Campo "nome" é obrigatório e deve ser uma string.' });
    }

    if (!data.idade || typeof data.idade !== 'number') {
        return res.status(400).json({ message: 'Campo "idade" é obrigatório e deve ser um número.' });
    }

    if (!data.email || typeof data.email !== 'string') {
        return res.status(400).json({ message: 'Campo "email" é obrigatório e deve ser uma string.' });
    }

    // JSON válido
    res.status(200).json({ message: 'JSON válido!', recebido: data });
});

const Joi = require('joi');

app.post('/validar-json', (req, res) => {
    const schema = Joi.object({
        nome: Joi.string().required(),
        idade: Joi.number().required(),
        email: Joi.string().email().required(),
    });

    const { error, value } = schema.validate(req.body);

    if (error) {
        return res.status(400).json({ message: 'Erro de validação.', detalhes: error.details });
    }

    res.status(200).json({ message: 'JSON válido!', recebido: value });
});

